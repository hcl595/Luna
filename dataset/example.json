[
    {
        "prompt": "将以下代码按照本软件标准进行修改：\nfrom zhipuai import ZhipuAI\nclient = ZhipuAI(api_key='')  # 请填写您自己的APIKey\nresponse = client.chat.completions.create(\nmodel='glm-4-plus',  # 请填写您要调用的模型名称\nmessages=[\n{'role': 'system', 'content': '你是一个乐于回答各种问题的小助手，你的任务是提供专业、准确、有洞察力的建议。'},\n{'role': 'user', 'content': '我对太阳系的行星非常感兴趣，尤其是土星。请提供关于土星的基本信息，包括它的大小、组成、环系统以及任何独特的天文现象。'},\n],\nstream=True,\n)\nfor chunk in response:\nprint(chunk.choices[0].delta)\n",
        "response": "#Request AI\ntry:\n    question: Message = {'role': 'user', 'content': Userinput}\n    messages.append(question)\n    client = ZhipuAI(APIKEY)\n    ZhipuAI.api_base = RequestURL\n    for chunk in client.chat.completions.create(\n        model=ModelName,\n        messages=messages,\n        stream=True,\n        temperature=0,\n    ):\n        if stream == True:\n            if hasattr(chunk.choices[0].delta, 'content'):\n                print(chunk.choices[0].delta.content, end='', flush=True)\n                response = response + chunk.choices[0].delta.content\n                response_out = mistune.html(response)\n                yield response_out\n        else:\n            if hasattr(chunk.choices[0].delta, 'content'):\n                print(chunk.choices[0].delta.content, end='', flush=True)\n                response = response + chunk.choices[0].delta.content\n                response = mistune.html(response)\n            return response\nexcept ZhipuAIError.AuthenticationError:\n    return 'Check Your API Key'"
    },
    {
        "prompt": "将以下代码按照本软件标准进行修改：\nwith client.beta.threads.runs.stream(\n    thread_id=thread.id,\n    assistant_id=assistant.id,\n    instructions='Please address the user as Jane Doe. The user has a premium account.',\n) as stream:\n    for event in stream:\n        # Print the text from text delta events\n        if event.type == 'thread.message.delta' and event.data.delta.content:\n            print(event.data.delta.content[0].text)",
        "response": "#Request AI\ntry:\nquestion: Message = {'role': 'user', 'content': Userinput}\nmessages.append(question)\nopenai.api_key = APIKEY\nopenai.api_base = RequestURL\nfor chunk in openai.ChatCompletion.create(\n    model=ModelName,\n    messages=messages,\n    stream=True,\n    temperature=0,\n):\n    if stream == True:\n        if hasattr(chunk.choices[0].delta, 'content'):\n            print(chunk.choices[0].delta.content, end='', flush=True)\n            response = response + chunk.choices[0].delta.content\n            response_out = mistune.html(response)\n            yield response_out\n    else:\n        if hasattr(chunk.choices[0].delta, 'content'):\n            print(chunk.choices[0].delta.content, end='', flush=True)\n            response = response + chunk.choices[0].delta.content\n            response = mistune.html(response)\n        return response\nexcept openai.error.AuthenticationError:\nreturn 'Check Your API Key'"
    }
]

